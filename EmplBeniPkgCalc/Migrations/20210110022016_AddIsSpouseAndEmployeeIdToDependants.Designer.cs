// <auto-generated />
using System;
using EmployeeBenefitPackageCalc.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EmployeeBenefitPackageCalc.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20210110024016_AddIsSpouseAndEmployeeIdToDependants")]
    partial class AddIsSpouseAndEmployeeIdToDependants
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("EmployeeBenefitPackageCalc.src.Models.Dependent", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("birthDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("employeeId")
                        .HasColumnType("int");

                    b.Property<string>("firstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isSpouse")
                        .HasColumnType("bit");

                    b.Property<string>("lastName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("employeeId");

                    b.ToTable("Dependent");
                });

            modelBuilder.Entity("EmployeeBenefitPackageCalc.src.Models.Employee", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("birthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("firstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("insured")
                        .HasColumnType("bit");

                    b.Property<string>("lastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("payRate")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("Employee");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BirthDate = new DateTime(1964, 12, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Gomez",
                            Insured = true,
                            LastName = "Addams",
                            PayRate = 2000
                        },
                        new
                        {
                            Id = 2,
                            BirthDate = new DateTime(1979, 8, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Bob",
                            Insured = true,
                            LastName = "Parr",
                            PayRate = 2000
                        },
                        new
                        {
                            Id = 3,
                            BirthDate = new DateTime(1980, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Helen",
                            Insured = false,
                            LastName = "Parr",
                            PayRate = 2000
                        },
                        new
                        {
                            Id = 4,
                            BirthDate = new DateTime(1984, 4, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "April",
                            Insured = true,
                            LastName = "O'Neil",
                            PayRate = 2000
                        },
                        new
                        {
                            Id = 5,
                            BirthDate = new DateTime(1981, 12, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Sarah",
                            Insured = true,
                            LastName = "Connor",
                            PayRate = 2000
                        },
                        new
                        {
                            Id = 6,
                            BirthDate = new DateTime(1977, 7, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Agnarr",
                            Insured = true,
                            LastName = "Runeardsson",
                            PayRate = 2000
                        });
                });

            modelBuilder.Entity("EmployeeBenefitPackageCalc.src.Models.Settings", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("DependantCost")
                        .HasColumnType("int");

                    b.Property<int>("DiscountPercentage")
                        .HasColumnType("int");

                    b.Property<string>("DiscountString")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmployeeCost")
                        .HasColumnType("int");

                    b.Property<string>("InsuranceName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Settings");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DependantCost = 500,
                            DiscountPercentage = 10,
                            DiscountString = "A",
                            EmployeeCost = 1000,
                            InsuranceName = "Hyrule Health Network"
                        });
                });

            modelBuilder.Entity("EmployeeBenefitPackageCalc.src.Models.Dependent", b =>
                {
                    b.HasOne("EmployeeBenefitPackageCalc.src.Models.Employee", null)
                        .WithMany("Dependants")
                        .HasForeignKey("employeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EmployeeBenefitPackageCalc.src.Models.Employee", b =>
                {
                    b.Navigation("Dependants");
                });
#pragma warning restore 612, 618
        }
    }
}
